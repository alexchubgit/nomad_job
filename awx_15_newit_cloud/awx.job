job "awx" {

  datacenters = ["gcp-australia-southeast1"]
  type     = "service"

  constraint {
    attribute = "${attr.kernel.name}"
    value     = "linux"
  }

  group "awx" {
    count = 1
    network {
      port "postgres" {
        static = 5432
      }
      port "redis" {
        static = 6379
      }
      port "http" {
        to = 8052
      }
    }

    task "postgres" {

      lifecycle {
        hook = "prestart"
        sidecar = true
      }

      driver = "docker"
      config {
        image = "postgres:12"
        hostname="postgres"
        ports = ["postgres"]
        volumes = [
          "/mnt/mycephfs/apps/config/awx/postgres/12/data:/var/lib/postgresql/data/pgdata"
        ]
      }

      env {
        POSTGRES_USER     = "awx"
        POSTGRES_PASSWORD = "awxpass"
        POSTGRES_DB       = "awx"
        PGDATA            = "/var/lib/postgresql/data/pgdata"
      }

      resources {
        cpu    = 200
        memory = 200
      }

    } # end task postgres

    task "redis" {

      # The dbmigrate task will run BEFORE the puma task in this group.
      lifecycle {
        hook = "prestart"
        sidecar = true
      }

      driver = "docker"
      config {
        image = "redis"
        hostname = "redis"
        ports = ["redis"]
      }

      resources {
        cpu    = 300
        memory = 300
      }

    } # end task redis

    task "awx_task" {

      driver = "docker"
      config {
        image = "ansible/awx:15.0.1"
        hostname = "awx"
        command = "/bin/bash"
        args = ["-c", "/usr/bin/launch_awx_task.sh"]
        volumes = [
          "/mnt/mycephfs/apps/config/awx/SECRET_KEY:/etc/tower/SECRET_KEY",
          "/mnt/mycephfs/apps/config/awx/environment.sh:/etc/tower/conf.d/environment.sh",
          "/mnt/mycephfs/apps/config/awx/projects:/var/lib/awx/projects",
          "local/credentials.py:/etc/tower/conf.d/credentials.py"
        ]
      }

      template {
        destination   = "local/credentials.py"
        change_mode   = "restart"
        data          = <<EOH

DATABASES = {
    'default': {
        'ATOMIC_REQUESTS': True,
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "{{ env "DATABASE_NAME" }}",
        'USER': "{{ env "DATABASE_USER" }}",
        'PASSWORD': "{{ env "DATABASE_PASSWORD" }}",
        'HOST': "{{ env "NOMAD_HOST_IP_postgres" }}",
        'PORT': "{{ env "NOMAD_PORT_postgres" }}",
    }
}

BROKER_URL = 'redis://{{ env "NOMAD_HOST_IP_redis" }}:6379'

CHANNEL_LAYERS = {
    "default": {
    "BACKEND": "channels_redis.core.RedisChannelLayer",
    "CONFIG": {"hosts": [BROKER_URL], "capacity": 10000, "group_expiry": 157784760}
    }
}

                        EOH
      }

      env {
        DATABASE_NAME      = "awx"
        DATABASE_USER      = "awx"
        DATABASE_PASSWORD  = "awxpass"
        DATABASE_HOST      = "${NOMAD_HOST_IP_postgres}"
        DATABASE_PORT      = "${NOMAD_PORT_postgres}"

        REDIS_HOST     = "${NOMAD_HOST_IP_redis}"
        REDIS_PORT     = "${NOMAD_PORT_redis}"

        AWX_ADMIN_USER     = "admin"
        AWX_ADMIN_PASSWORD = "password"

      }

      resources {
        cpu    = 1000
        memory = 1000
      }

    } # end task awx_task

    task "awx_web" {
      driver = "docker"
      config {
        image = "ansible/awx:15.0.1"
        hostname = "awxweb"
        ports = ["http"]
        volumes = [
          "/mnt/mycephfs/apps/config/awx/SECRET_KEY:/etc/tower/SECRET_KEY",
          "/mnt/mycephfs/apps/config/awx/environment.sh:/etc/tower/conf.d/environment.sh",
          "/mnt/mycephfs/apps/config/awx/nginx.conf:/etc/nginx/nginx.conf",
          "/mnt/mycephfs/apps/config/awx/projects:/var/lib/awx/projects",
          "local/credentials.py:/etc/tower/conf.d/credentials.py"
        ]
      }

      template {
        destination   = "local/credentials.py"
        change_mode   = "restart"
        data          = <<EOH

DATABASES = {
    'default': {
        'ATOMIC_REQUESTS': True,
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "{{ env "DATABASE_NAME" }}",
        'USER': "{{ env "DATABASE_USER" }}",
        'PASSWORD': "{{ env "DATABASE_PASSWORD" }}",
        'HOST': "{{ env "NOMAD_HOST_IP_postgres" }}",
        'PORT': "{{ env "NOMAD_PORT_postgres" }}",
    }
}

BROKER_URL = 'redis://{{ env "NOMAD_HOST_IP_redis" }}:6379'

CHANNEL_LAYERS = {
    "default": {
    "BACKEND": "channels_redis.core.RedisChannelLayer",
    "CONFIG": {"hosts": [BROKER_URL], "capacity": 10000, "group_expiry": 157784760}
    }
}

                        EOH
      }

      env {
        DATABASE_NAME      = "awx"
        DATABASE_USER      = "awx"
        DATABASE_PASSWORD  = "awxpass"
        DATABASE_HOST      = "${NOMAD_HOST_IP_postgres}"
        DATABASE_PORT      = "${NOMAD_PORT_postgres}"

        REDIS_HOST     = "${NOMAD_HOST_IP_redis}"
        REDIS_PORT     = "${NOMAD_PORT_redis}"

        AWX_ADMIN_USER     = "admin"
        AWX_ADMIN_PASSWORD = "password"
      }

      resources {
        cpu    = 1000
        memory = 1000
      }

    } # end task awx_web

    service {
      tags = ["web", "urlprefix-awx.service.simedarby.demo/"]
      name = "awx"
      port = "http"
      check {
        type = "tcp"
        port = "http"
        interval = "30s"
        timeout = "5s"
      }
    }

  } # end group
} # end job

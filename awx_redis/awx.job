job "awx" {

  meta {
    run_uuid = "${uuidv4()}"
  }

  datacenters = ["dc1"]
  type     = "service"

  constraint {
    attribute = "${attr.kernel.name}"
    value     = "linux"
  }

  group "awx" {
    count = 1
    network {
      port "http" {
        static = 80
        to     = 8052
      }
      port "postgres" { 
        static = 5432 
      }
      port "redis" {
        static = 6379
      }
#      port "memcached" { 
#        static = 11211 
#      }
      port "adminer" { 
        static = 8080 
      }
    }

    task "awx_web" {
      driver = "docker"
      config {
        image = "ansible/awx:17.1.0"
        hostname = "web"
        ports = ["http"]
        volumes = [
          "local/SECRET_KEY:/etc/tower/SECRET_KEY",
          "local/environment.sh:/etc/tower/conf.d/environment.sh",
          "local/credentials.py:/etc/tower/conf.d/credentials.py",
          "local/nginx.conf:/etc/nginx/nginx.conf",
          "/awx/projects:/var/lib/awx/projects",
 #         "/awx/redis_socket/:/var/run/redis/"
        ]
      }

      # Required on disk. Will download all files to default allocation folder
      artifact {
        source = "git::https://github.com/alexchubgit/nomad_jobs.git//awx_redis"
      }

      env {
        AWX_ADMIN_USER     = "admin"
        AWX_ADMIN_PASSWORD = "password"

        DATABASE_NAME     = "awx"
        DATABASE_USER     = "awx"
        DATABASE_PASSWORD = "awxpass"
        DATABASE_HOST     = "${NOMAD_HOST_IP_postgres}"
        DATABASE_PORT     = "${NOMAD_PORT_postgres}"

        REDIS_HOST = "${NOMAD_HOST_IP_redis}"
        REDIS_PORT = "${NOMAD_PORT_redis}"

        MEMCACHED_HOST      = "${NOMAD_HOST_IP_memcached}"
        MEMCACHED_PORT      = "${NOMAD_PORT_memcached}"
      }

      resources {
        cpu    = 1000
        memory = 1000 
      }

    } # END task

    task "awx_task" {
      driver = "docker"
      config {
        image = "ansible/awx:17.1.0"
        hostname = "awx"
        command = "/bin/bash"
        args = ["/usr/bin/launch_awx_task.sh"]
        volumes = [
          "local/SECRET_KEY:/etc/tower/SECRET_KEY",
          "local/environment.sh:/etc/tower/conf.d/environment.sh",
          "local/credentials.py:/etc/tower/conf.d/credentials.py",
          "/awx/projects:/var/lib/awx/projects",
#          "/awx/redis_socket/:/var/run/redis/"
        ]
      }

      # Required on disk. Will download all files to default allocation folder
      artifact {
        source = "git::https://github.com/alexchubgit/nomad_jobs.git//awx_redis"
      }

      env {
        AWX_ADMIN_USER     = "admin"
        AWX_ADMIN_PASSWORD = "password"

        DATABASE_NAME     = "awx"
        DATABASE_USER     = "awx"
        DATABASE_PASSWORD = "awxpass"
        DATABASE_HOST     = "${NOMAD_HOST_IP_postgres}"
        DATABASE_PORT     = "${NOMAD_PORT_postgres}"

        REDIS_HOST = "${NOMAD_HOST_IP_redis}"
        REDIS_PORT = "${NOMAD_PORT_redis}"

        MEMCACHED_HOST      = "${NOMAD_HOST_IP_memcached}"
        MEMCACHED_PORT      = "${NOMAD_PORT_memcached}"
      }

      resources {
        cpu    = 300
        memory = 300
      }

    } # END task/awx


#    task "memcached" {
#      driver = "docker"
#      config {
#        image = "memcached:alpine"
#        ports = ["memcached"]
#      }
#
#      resources {
#        cpu    = 100
#        memory = 100
#      }
#    } # END task/memcached

    task "postgres" {
      driver = "docker"
      config {
        image = "postgres:12"
        hostname="postgres"
        ports = ["postgres"]
        volumes = [
          "/awx/postgres/12/data:/var/lib/postgresql/data/pgdata",
        ]
      }

      resources {
        cpu    = 200
        memory = 200
      }

      env {
        POSTGRES_USER     = "awx"
        POSTGRES_PASSWORD = "awxpass"
        POSTGRES_DB       = "awx"
        PGDATA            = "/var/lib/postgresql/data/pgdata"
      }

    } # END task/postgres

    task "adminer" {
      driver = "docker"
      config {
        image = "adminer:4.8.1"
        ports = ["adminer"]
      }

      env {
        ADMINER_DEFAULT_SERVER = "${NOMAD_HOST_IP_postgres}"
      }

      resources {
        cpu    = 100
        memory = 100
      }

    } # END task/adminer


    task "redis" {
      driver = "docker"
      config {
        image = "redis:latest"
        ports = ["redis"]
      }

      env {
        REDIS_HOST = "${NOMAD_HOST_IP_redis}"
        REDIS_PORT = "${NOMAD_PORT_redis}"
      }

      resources {
        cpu    = 200
        memory = 200
      }

    } # END task/redis

  } # END group
} # END job

